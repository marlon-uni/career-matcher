@model IEnumerable<Careermatcher.Models.Match>

@{
    ViewBag.Title = "eligibleApplicants";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Applicants</h2>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ApplicantName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ApplicantEmailAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.overAllScore)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.indifferenceInEducationRequirment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.indifferenceInEducationRequirment)
        </th>*@
 
        <th></th>
    </tr>

@foreach (var item in Model.OrderBy(model=>model.overAllScore)) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ApplicantName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ApplicantEmailAddress)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.overAllScore)*@
            @if (item.overAllScore > 0)
            {
                for (int i = 0; i < item.overAllScore + 1; i++)
                {
                    @*<a href="#">*@
                        <span class="glyphicon glyphicon-briefcase"></span>
                    @*</a>*@
                }
            }
            else
            {
                @*<a href="#">*@
                    <span class="glyphicon glyphicon-briefcase"></span>
                @*</a>*@
            }
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.indiffernceInIntrestedJobsRequirment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.indifferenceInEducationRequirment)
        </td>*@
        <td>

            @if (item.acceptedByEmployer == false)
            {
            @Html.ActionLink(" ", "Accept", "InvitationDecider", new { name = item.ApplicantName, email = item.ApplicantEmailAddress, jobTitle = item.JobTitle, dateTime = item.PublishDate.AsDateTime() }, new { @class = "btn btn-success glyphicon glyphicon-thumbs-up" })
            @Html.ActionLink(" ", "Reject", "InvitationDecider", new { name = item.ApplicantName, email = item.ApplicantEmailAddress, jobTitle = item.JobTitle, dateTime = item.PublishDate.AsDateTime() }, new { @class = "btn btn-danger glyphicon glyphicon-thumbs-down" })
            }
            else if(item.acceptedByEmployer==true&&item.acceptedByApplicant==true)
            {
                @Html.ActionLink(" ", "ViewPotentialApplicant", "InvitationDecider", new { name = item.ApplicantName, email = item.ApplicantEmailAddress, jobTitle = item.JobTitle, dateTime = item.PublishDate.AsDateTime() }, new { @class = "btn btn-warning glyphicon glyphicon-ok-sign" })
            }
            else
            {
                <a>Pending</a>
            }
         </td>
        @*<td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>*@
    </tr>
}

</table>
